version: 2
jobs:
  build:
    working_directory: ~/circulate
    docker:
      - image: centos:7
      - image: ecmi/fixml:sim
    steps:
      - run:
          name: Install Git
          command: yum install -y git
      - run:
          name: Add hosts record
          command: echo 127.0.0.1 ecag-fixml-dev1 | tee -a /etc/hosts
      - checkout
      - run:
          name: Install dependencies
          command: |
            curl -o /etc/yum.repos.d/qpid-proton-devel.repo http://repo.effectivemessaging.com/qpid-proton-stable.repo
            curl -o /etc/yum.repos.d/qpid-cpp-devel.repo http://repo.effectivemessaging.com/qpid-cpp-stable.repo
            curl -o /etc/yum.repos.d/qpid-python-devel.repo http://repo.effectivemessaging.com/qpid-python-stable.repo
            yum -y install epel-release
            yum install -y python-pip
            pip install unittest-xml-reporting
            pip install coveralls
            yum -y --setopt=tsflag=nodocs install openssl cyrus-sasl cyrus-sasl-md5 cyrus-sasl-plain python-qpid-proton python-qpid python-qpid-messaging python-coverage
      - run:
          name: Run tests
          command: |
            export QPID_SSL_CERT_DB=sql:./tests/resources/
            export QPID_SSL_CERT_PASSWORD_FILE=tests/resources/pwdfile
            export QPID_SSL_CERT_NAME=ABCFR_ABCFRALMMACC1
            coverage run run_tests.py
      - run:
          name: Collect artifacts
          command: |
            mkdir -p ./junit-reports/
            find . -type f -regex "./test-reports/.*xml" -exec cp {} ./junit-reports/ \;
            coverage html
            mkdir -p ./coverage-reports/
            cp -r htmlcov/* ./coverage-reports/
      - run:
          name: Collect artifacts
          command: |
            export COVERALLS_REPO_TOKEN=${COVERALLS_TOKEN}
            coveralls
      - store_test_results:
          path: junit-reports/
      - store_artifacts:
          path: coverage-reports/
